---
- hosts: aws-nexus
  become: true
  vars:
    user: nexus
    group: nexus
  tasks:
    - name: Wait 300 seconds for server to boot up
      wait_for_connection:
        delay: 1
        timeout: 300

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes

    - name: Install openjdk 8 packages
      apt:
        pkg:
          - openjdk-8-jdk
          - nginx
        state: latest
        update_cache: true

    - name: Adding '{{ group }}' group
      group:
        name: "{{ group }}"
        state: present
    
    - name: Adding '{{ user }}' user
      user:
        name: "{{ user }}"
        comment: "{{ user }} access only"
        group: "{{ group }}"
        createhome: yes
        home: "/home/{{ user }}"

    - name: Download nexus files
      get_url:
        url: https://download.sonatype.com/nexus/3/nexus-3.42.0-01-unix.tar.gz
        dest: /tmp/nexus.tar.gz

    - name: Extract nexus
      shell: "tar xzf nexus.tar.gz"
      args:
        chdir: /tmp

    - name: Remove old directories
      shell: rm -rf /tmp/nexus /opt/nexus /opt/sonatype-work

    - name: "Rename nexus folder"
      shell: "mv nexus-3.42.0-01 nexus"
      args:
        chdir: /tmp

    - name: Copy nexus
      shell: "cp -r nexus/ sonatype-work/ /opt "
      args:
        chdir: /tmp

    - name: Change user group of nexus folder
      file:
        path: /opt/nexus
        state: directory
        recurse: yes
        owner: "{{ user }}"
        group: "{{ group }}"

    - name: Change user group of sonatype-work folder
      file:
        path: /opt/sonatype-work
        state: directory
        recurse: yes
        owner: "{{ user }}"
        group: "{{ group }}"

    - name: Add user for nexus in nexus.rc file
      copy:
        content: 'run_as_user="{{ user }}"'
        dest: /opt/nexus/bin/nexus.rc

    - name: Change java heap size
      replace:
        path: /opt/nexus/bin/nexus.vmoptions
        regexp: '2703m'
        replace: '512m'

    - name: Copy content to create nexus service
      copy:
        content: |
          [Unit]
          Description=nexus service
          After=network.target

          [Service]
          Type=forking
          LimitNOFILE=65536
          User={{ user }}
          Group={{ group }}
          ExecStart=/opt/nexus/bin/nexus start
          ExecStop=/opt/nexus/bin/nexus stop
          User=nexus
          Restart=on-abort
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/nexus.service

    - name: Enable service nexus and ensure it is not masked
      systemd:
        name: nexus
        enabled: yes

    - name: Copying nginx conf
      copy:
        src: ".tmp/nginx.conf"
        dest: /etc/nginx/sites-enabled/default
      notify:
        - restart nginx
        - Run a user service for nexus

  handlers:
    - name: restart nginx
      service: 
        name: nginx
        state: restarted
        
    - name: Run a user service for nexus
      systemd:
        name: nexus
        state: started